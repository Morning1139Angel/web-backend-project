// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "https://tos.santoshk.dev",
        "contact": {
            "name": "amir khazama",
            "email": "amirkhazama1139@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/auth/dh": {
            "post": {
                "description": "Takes the client public key. Return server public key. and stores private key",
                "produces": [
                    "application/json"
                ],
                "summary": "diffile hilman algo",
                "parameters": [
                    {
                        "description": "DHRequest JSON",
                        "name": "DHRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.DHRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/grpc.DHParamsResponse"
                        }
                    }
                }
            }
        },
        "/auth/pq": {
            "post": {
                "description": "returns the p and g numbers used in dh",
                "produces": [
                    "application/json"
                ],
                "summary": "p and g getter",
                "parameters": [
                    {
                        "description": "PQRequest JSON",
                        "name": "PQRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.PQRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/grpc.PQResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "grpc.CompleteNonces": {
            "type": "object",
            "properties": {
                "nonce": {
                    "type": "string"
                },
                "nonce_server": {
                    "type": "string"
                }
            }
        },
        "grpc.DHParamsResponse": {
            "type": "object",
            "properties": {
                "B": {
                    "type": "string"
                },
                "message_id": {
                    "type": "integer"
                },
                "nonces": {
                    "$ref": "#/definitions/grpc.CompleteNonces"
                }
            }
        },
        "grpc.PQResponse": {
            "type": "object",
            "properties": {
                "g": {
                    "type": "string"
                },
                "message_id": {
                    "type": "integer"
                },
                "nonces": {
                    "$ref": "#/definitions/grpc.CompleteNonces"
                },
                "p": {
                    "type": "string"
                }
            }
        },
        "main.CompleteNonces": {
            "type": "object",
            "required": [
                "nonce",
                "nonceServer"
            ],
            "properties": {
                "nonce": {
                    "type": "string"
                },
                "nonceServer": {
                    "type": "string"
                }
            }
        },
        "main.DHRequest": {
            "type": "object",
            "required": [
                "A",
                "messageId",
                "nonces"
            ],
            "properties": {
                "A": {
                    "type": "string"
                },
                "messageId": {
                    "type": "integer"
                },
                "nonces": {
                    "$ref": "#/definitions/main.CompleteNonces"
                }
            }
        },
        "main.PQRequest": {
            "type": "object",
            "required": [
                "messageId",
                "nonce"
            ],
            "properties": {
                "messageId": {
                    "description": "TODO:add custom odd validator",
                    "type": "integer"
                },
                "nonce": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:80",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Web Hw1",
	Description:      "A sample homework service API in Go using Gin framework.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
